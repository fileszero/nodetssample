/** Declaration file generated by dts-gen */
declare module 'simple-statistics' {
    export class BayesianClassifier {
        constructor();

        score(item: any): any;

        train(item: any, category: any): void;

    }

    export class PerceptronModel {
        constructor();

        predict(features: any): any;

        train(features: any, label: any): any;

    }

    export class bayesian {
        constructor();

        score(item: any): any;

        train(item: any, category: any): void;

    }

    export class perceptron {
        constructor();

        predict(features: any): any;

        train(features: any, label: any): any;

    }

    export const epsilon: number;

    export const standardNormalTable: number[];

    export function addToMean(mean: any, n: any, newValue: any): any;

    export function average(x: any): any;

    export function bernoulliDistribution(p: any): any;

    export function binomialDistribution(trials: any, probability: any): any;

    export function bisect(func: any, start: any, end: any, maxIterations: any, errorTolerance: any): any;

    export function chiSquaredGoodnessOfFit(data: any, distributionType: any, significance: any): any;

    export function chunk(x: any, chunkSize: any): any;

    export function ckmeans(x: any, nClusters: any): any;

    export function combinations(x: any, k: any): any;

    export function combinationsReplacement(x: any, k: any): any;

    export function combineMeans(mean1: any, n1: any, mean2: any, n2: any): any;

    export function combineVariances(variance1: any, mean1: any, n1: any, variance2: any, mean2: any, n2: any): any;

    export function cumulativeStdNormalProbability(z: any): any;

    export function equalIntervalBreaks(x: any, nClasses: any): any;

    export function erf(x: any): any;

    export function errorFunction(x: any): any;

    export function factorial(n: any): any;

    export function geometricMean(x: any): any;

    export function harmonicMean(x: any): any;

    export function interquartileRange(x: any): any;

    export function inverseErrorFunction(x: any): any;

    export function iqr(x: any): any;

    export function kernelDensityEstimation(X: any, kernel: any, bandwidthMethod: any): any;

    export function linearRegression(data: any): any;

    export function linearRegressionLine(mb: any): any;

    export function mad(x: any): any;

    export function max(x: any): any;

    export function maxSorted(x: any): any;

    export function mean(x: any): any;

    export function median(x: any): any;

    export function medianAbsoluteDeviation(x: any): any;

    export function medianSorted(sorted: any): any;

    export function min(x: any): any;

    export function minSorted(x: any): any;

    export function mode(x: any): any;

    export function modeFast(x: any): any;

    export function modeSorted(sorted: any): any;

    export function numericSort(x: any): any;

    export function permutationsHeap(elements: any): any;

    export function poissonDistribution(lambda: any): any;

    export function probit(p: any): any;

    export function product(x: any): any;

    export function quantile(x: any, p: any): any;

    export function quantileSorted(x: any, p: any): any;

    export function quickselect(arr: any, k: any, left: any, right: any): void;

    export function rSquared(x: any, func: any): any;

    export function rms(x: any): any;

    export function rootMeanSquare(x: any): any;

    export function sample(x: any, n: any, randomSource: any): any;

    export function sampleCorrelation(x: any, y: any): any;

    export function sampleCovariance(x: any, y: any): any;

    export function sampleKurtosis(x: any): any;

    export function sampleSkewness(x: any): any;

    export function sampleStandardDeviation(x: any): any;

    export function sampleVariance(x: any): any;

    export function sampleWithReplacement(x: any, n: any, randomSource: any): any;

    export function shuffle(x: any, randomSource: any): any;

    export function shuffleInPlace(x: any, randomSource: any): any;

    export function sign(x: any): any;

    export function standardDeviation(x: any): any;

    export function subtractFromMean(mean: any, n: any, value: any): any;

    export function sum(x: any): any;

    export function sumNthPowerDeviations(x: any, n: any): any;

    export function sumSimple(x: any): any;

    export function tTest(x: any, expectedValue: any): any;

    export function tTestTwoSample(sampleX: any, sampleY: any, difference: any): any;

    export function uniqueCountSorted(x: any): any;

    export function variance(x: any): any;

    export function zScore(x: any, mean: any, standardDeviation: any): any;

    export namespace BayesianClassifier {
        namespace prototype {
            function score(item: any): any;

            function train(item: any, category: any): void;

            namespace score {
                const prototype: {
                };

            }

            namespace train {
                const prototype: {
                };

            }

        }

    }

    export namespace PerceptronModel {
        namespace prototype {
            function predict(features: any): any;

            function train(features: any, label: any): any;

            namespace predict {
                const prototype: {
                };

            }

            namespace train {
                const prototype: {
                };

            }

        }

    }

    export namespace addToMean {
        const prototype: {
        };

    }

    export namespace average {
        const prototype: {
        };

    }

    export namespace bayesian {
        namespace prototype {
            function score(item: any): any;

            function train(item: any, category: any): void;

            namespace score {
                const prototype: {
                };

            }

            namespace train {
                const prototype: {
                };

            }

        }

    }

    export namespace bernoulliDistribution {
        const prototype: {
        };

    }

    export namespace binomialDistribution {
        const prototype: {
        };

    }

    export namespace bisect {
        const prototype: {
        };

    }

    export namespace chiSquaredGoodnessOfFit {
        const prototype: {
        };

    }

    export namespace chunk {
        const prototype: {
        };

    }

    export namespace ckmeans {
        const prototype: {
        };

    }

    export namespace combinations {
        const prototype: {
        };

    }

    export namespace combinationsReplacement {
        const prototype: {
        };

    }

    export namespace combineMeans {
        const prototype: {
        };

    }

    export namespace combineVariances {
        const prototype: {
        };

    }

    export namespace cumulativeStdNormalProbability {
        const prototype: {
        };

    }

    export namespace equalIntervalBreaks {
        const prototype: {
        };

    }

    export namespace erf {
        const prototype: {
        };

    }

    export namespace errorFunction {
        const prototype: {
        };

    }

    export namespace factorial {
        const prototype: {
        };

    }

    export namespace geometricMean {
        const prototype: {
        };

    }

    export namespace harmonicMean {
        const prototype: {
        };

    }

    export namespace interquartileRange {
        const prototype: {
        };

    }

    export namespace inverseErrorFunction {
        const prototype: {
        };

    }

    export namespace iqr {
        const prototype: {
        };

    }

    export namespace kernelDensityEstimation {
        const prototype: {
        };

    }

    export namespace linearRegression {
        const prototype: {
        };

    }

    export namespace linearRegressionLine {
        const prototype: {
        };

    }

    export namespace mad {
        const prototype: {
        };

    }

    export namespace max {
        const prototype: {
        };

    }

    export namespace maxSorted {
        const prototype: {
        };

    }

    export namespace mean {
        const prototype: {
        };

    }

    export namespace median {
        const prototype: {
        };

    }

    export namespace medianAbsoluteDeviation {
        const prototype: {
        };

    }

    export namespace medianSorted {
        const prototype: {
        };

    }

    export namespace min {
        const prototype: {
        };

    }

    export namespace minSorted {
        const prototype: {
        };

    }

    export namespace mode {
        const prototype: {
        };

    }

    export namespace modeFast {
        const prototype: {
        };

    }

    export namespace modeSorted {
        const prototype: {
        };

    }

    export namespace numericSort {
        const prototype: {
        };

    }

    export namespace perceptron {
        namespace prototype {
            function predict(features: any): any;

            function train(features: any, label: any): any;

            namespace predict {
                const prototype: {
                };

            }

            namespace train {
                const prototype: {
                };

            }

        }

    }

    export namespace permutationsHeap {
        const prototype: {
        };

    }

    export namespace poissonDistribution {
        const prototype: {
        };

    }

    export namespace probit {
        const prototype: {
        };

    }

    export namespace product {
        const prototype: {
        };

    }

    export namespace quantile {
        const prototype: {
        };

    }

    export namespace quantileSorted {
        const prototype: {
        };

    }

    export namespace quickselect {
        const prototype: {
        };

    }

    export namespace rSquared {
        const prototype: {
        };

    }

    export namespace rms {
        const prototype: {
        };

    }

    export namespace rootMeanSquare {
        const prototype: {
        };

    }

    export namespace sample {
        const prototype: {
        };

    }

    export namespace sampleCorrelation {
        const prototype: {
        };

    }

    export namespace sampleCovariance {
        const prototype: {
        };

    }

    export namespace sampleKurtosis {
        const prototype: {
        };

    }

    export namespace sampleSkewness {
        const prototype: {
        };

    }

    export namespace sampleStandardDeviation {
        const prototype: {
        };

    }

    export namespace sampleVariance {
        const prototype: {
        };

    }

    export namespace sampleWithReplacement {
        const prototype: {
        };

    }

    export namespace shuffle {
        const prototype: {
        };

    }

    export namespace shuffleInPlace {
        const prototype: {
        };

    }

    export namespace sign {
        const prototype: {
        };

    }

    export namespace standardDeviation {
        const prototype: {
        };

    }

    export namespace subtractFromMean {
        const prototype: {
        };

    }

    export namespace sum {
        const prototype: {
        };

    }

    export namespace sumNthPowerDeviations {
        const prototype: {
        };

    }

    export namespace sumSimple {
        const prototype: {
        };

    }

    export namespace tTest {
        const prototype: {
        };

    }

    export namespace tTestTwoSample {
        const prototype: {
        };

    }

    export namespace uniqueCountSorted {
        const prototype: {
        };

    }

    export namespace variance {
        const prototype: {
        };

    }

    export namespace zScore {
        const prototype: {
        };

    }
}